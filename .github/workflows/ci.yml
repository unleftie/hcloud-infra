name: CI
on:
  workflow_dispatch:
    inputs:
      runKics:
        description: Run KICS scan
        type: boolean
        default: true
        required: false
  push:
    paths-ignore: ["**.md", "LICENSE", ".github/dependabot.yml"]
    branches: ["master", "main"]
  pull_request:
    paths-ignore: ["**.md", "LICENSE", ".github/dependabot.yml"]
    branches: ["master", "main"]
    types: [opened, reopened]

env:
  KICS_SCAN_PATH: "./"

permissions: {}

defaults:
  run:
    shell: bash

concurrency:
  group: CI
  cancel-in-progress: false

jobs:
  scan:
    name: Checkmarx KICS
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: |
      inputs.runKics == true ||
      github.event_name == 'push'
    permissions:
      contents: read
      issues: write
      pull-requests: write
      security-events: write
      actions: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@v4

      - name: Run KICS scan
        uses: checkmarx/kics-github-action@v2
        with:
          path: ${{ env.KICS_SCAN_PATH }}
          fail_on: high
          output_formats: "json,sarif"
          exclude_paths: ".github/workflows/scorecard.yml"
          exclude_queries: "555ab8f9-2001-455e-a077-f2d0f41e2fb9" # Unpinned Actions Full Length Commit SHA
        continue-on-error: true

      - name: Upload to code-scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  tflint:
    name: TFLint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'push'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache plugin dir
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v5
        with:
          tflint_version: v0.52.0

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run TFLint
        run: tflint -f compact

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [scan]
    if: github.event_name == 'push'
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          semantic_version: 24
          extra_plugins: |
            conventional-changelog-conventionalcommits@8.0.0
            @semantic-release/github@10.3.5
